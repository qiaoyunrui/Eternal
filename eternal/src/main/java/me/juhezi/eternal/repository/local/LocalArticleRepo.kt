package me.juhezi.eternal.repository.local

import me.juhezi.eternal.global.Fail
import me.juhezi.eternal.global.Success
import me.juhezi.eternal.global.globalRealm
import me.juhezi.eternal.model.Article
import me.juhezi.eternal.repository.interfaces.IArticleRepo

/**
 * Auto generated by repo_generator.py
 */
class LocalArticleRepo : IArticleRepo {
    override fun add(t: Article, success: Success<Article>?, fail: Fail?) {
        globalRealm.executeTransactionAsync({
            it.copyToRealm(t)
        }, {
            success?.invoke(t)
        }, {
            fail?.invoke("Add error", it)
        })
    }

    override fun update(t: Article, success: Success<Article>?, fail: Fail?) {
        TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
    }

    override fun remove(id: String, success: Success<Article>?, fail: Fail?) {
        TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
    }

    override fun query(id: String, success: Success<Article>?, fail: Fail?) {
        TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
    }

    override fun queryAll(success: Success<List<Article>>?, fail: Fail?) {
        TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
    }

}
